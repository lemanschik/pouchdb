import './pouchdb-browser.browser.js';
import { uuid, defaultBackOff } from './pouchdb-utils.browser.js';
import { w as winningRev } from './rootToLeaf-f8d0e78a.js';
import { m as merge } from './merge-7299d068.js';
import { b as binStringToBluffer } from './base64StringToBlobOrBuffer-browser-cdc72594.js';
import { uniq, sequentialize, fin, callbackify, promisedCallback } from './pouchdb-mapreduce-utils.browser.js';
import { createError, generateErrorFromResponse, UNAUTHORIZED, MISSING_BULK_DOCS, MISSING_DOC, REV_CONFLICT, INVALID_ID, MISSING_ID, RESERVED_ID, NOT_OPEN, UNKNOWN_ERROR, BAD_ARG, INVALID_REQUEST, QUERY_PARSE_ERROR, DOC_VALIDATION, BAD_REQUEST, NOT_AN_OBJECT, DB_MISSING, WSQ_ERROR, LDB_ERROR, FORBIDDEN, INVALID_REV, FILE_EXISTS, MISSING_STUB, IDB_ERROR, INVALID_URL } from './pouchdb-errors.browser.js';
import generateReplicationId from './pouchdb-generate-replication-id.browser.js';
import Checkpointer from './pouchdb-checkpointer.browser.js';
import { p as parseUri } from './parseUri-b061a2c5.js';
import { r as rev } from './rev-5645662a.js';
import { c as clone } from './clone-abfcddc8.js';
import { p as parseDesignDocFunctionName, n as normalizeDesignDocFunctionName } from './normalizeDdocFunctionName-ea3481cf.js';
import { o as once, t as toPromise } from './toPromise-9dada06a.js';
import { u as upsert } from './upsert-331b6913.js';
import { a as collate } from './index-3a476dad.js';
import plugin from './pouchdb-find.browser.js';
import PouchDB from './pouchdb-core.browser.js';
import './pouchdb-adapter-idb.browser.js';
import './isLocalId-d067de54.js';
import './latest-0521537f.js';
import './parseDoc-5d2a34bd.js';
import './functionName-9335a350.js';
import './_commonjsHelpers-24198af3.js';
import './__node-resolve_empty-5ffda92e.js';
import './spark-md5-2c57e5fc.js';
import './preprocessAttachments-5fe0c9da.js';
import './pouchdb-binary-utils.browser.js';
import './blobOrBufferToBase64-browser-bbef19a6.js';
import './binaryMd5-browser-25ce905b.js';
import './processDocs-7ad6f99c.js';
import './revExists-12209d1c.js';
import './bulkGetShim-d4877145.js';
import './pouchdb-json.browser.js';
import './collectConflicts-6afe46fc.js';
import './guardedConsole-f54e5a40.js';
import './pouchdb-adapter-http.browser.js';
import './pouchdb-fetch.browser.js';
import './explainError-browser-c025e6c9.js';
import './flatten-994f45c6.js';
import './pouchdb-mapreduce.browser.js';
import './scopeEval-ff3a416d.js';
import './pouchdb-abstract-mapreduce.browser.js';
import './isRemote-f9121da9.js';
import './pouchdb-crypto.browser.js';
import './pouchdb-replication.browser.js';
import './stringMd5-browser-5aecd2bd.js';
import 'node:events';
import './findPathToLeaf-7e69c93c.js';
import './pouchdb-changes-filter.browser.js';
import './pouchdb-selector-core.browser.js';

//
// PouchDB.utils is basically a throwback to the pre-Browserify days,
// when this was the easiest way to access global utilities from anywhere
// in the project. For code cleanliness, we're trying to remove this file,
// but for practical reasons (legacy code, test code, etc.) this is still here.
//


var utils = {
  parseUri: parseUri,
  uuid: uuid,
  rev: rev,
  Promise: Promise,
  atob: atob,
  btoa: btoa,
  binaryStringToBlobOrBuffer: binStringToBluffer,
  clone: clone,
  createError: createError,
  generateErrorFromResponse: generateErrorFromResponse,
  generateReplicationId: generateReplicationId,
  parseDdocFunctionName: parseDesignDocFunctionName,
  normalizeDdocFunctionName: normalizeDesignDocFunctionName,
  once: once,
  merge: merge,
  winningRev: winningRev,
  upsert: upsert,
  toPromise: toPromise,
  checkpointer: Checkpointer,
  defaultBackOff: defaultBackOff,
  assign: Object.assign,
  mapReduceUtils: {
    uniq: uniq,
    sequentialize: sequentialize,
    fin: fin,
    callbackify: callbackify,
    promisedCallback: promisedCallback
  }
};

var errors = {
  UNAUTHORIZED: UNAUTHORIZED,
  MISSING_BULK_DOCS: MISSING_BULK_DOCS,
  MISSING_DOC: MISSING_DOC,
  REV_CONFLICT: REV_CONFLICT,
  INVALID_ID: INVALID_ID,
  MISSING_ID: MISSING_ID,
  RESERVED_ID: RESERVED_ID,
  NOT_OPEN: NOT_OPEN,
  UNKNOWN_ERROR: UNKNOWN_ERROR,
  BAD_ARG: BAD_ARG,
  INVALID_REQUEST: INVALID_REQUEST,
  QUERY_PARSE_ERROR: QUERY_PARSE_ERROR,
  DOC_VALIDATION: DOC_VALIDATION,
  BAD_REQUEST: BAD_REQUEST,
  NOT_AN_OBJECT: NOT_AN_OBJECT,
  DB_MISSING: DB_MISSING,
  WSQ_ERROR: WSQ_ERROR,
  LDB_ERROR: LDB_ERROR,
  FORBIDDEN: FORBIDDEN,
  INVALID_REV: INVALID_REV,
  FILE_EXISTS: FILE_EXISTS,
  MISSING_STUB: MISSING_STUB,
  IDB_ERROR: IDB_ERROR,
  INVALID_URL: INVALID_URL
};

PouchDB.utils = utils;
PouchDB.Errors = errors;
PouchDB.collate = collate;
PouchDB.plugin(plugin);

export { PouchDB as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG91Y2hkYi1mb3ItY292ZXJhZ2UuYnJvd3Nlci5qcyIsInNvdXJjZXMiOlsiLi4vcGFja2FnZXMvcG91Y2hkYi1mb3ItY292ZXJhZ2Uvc3JjL3V0aWxzLmpzIiwiLi4vcGFja2FnZXMvcG91Y2hkYi1mb3ItY292ZXJhZ2Uvc3JjL2Vycm9ycy5qcyIsIi4uL3BhY2thZ2VzL3BvdWNoZGItZm9yLWNvdmVyYWdlL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL1xuLy8gUG91Y2hEQi51dGlscyBpcyBiYXNpY2FsbHkgYSB0aHJvd2JhY2sgdG8gdGhlIHByZS1Ccm93c2VyaWZ5IGRheXMsXG4vLyB3aGVuIHRoaXMgd2FzIHRoZSBlYXNpZXN0IHdheSB0byBhY2Nlc3MgZ2xvYmFsIHV0aWxpdGllcyBmcm9tIGFueXdoZXJlXG4vLyBpbiB0aGUgcHJvamVjdC4gRm9yIGNvZGUgY2xlYW5saW5lc3MsIHdlJ3JlIHRyeWluZyB0byByZW1vdmUgdGhpcyBmaWxlLFxuLy8gYnV0IGZvciBwcmFjdGljYWwgcmVhc29ucyAobGVnYWN5IGNvZGUsIHRlc3QgY29kZSwgZXRjLikgdGhpcyBpcyBzdGlsbCBoZXJlLlxuLy9cblxuaW1wb3J0IHtcbiAgcGFyc2VVcmksXG4gIHV1aWQsXG4gIHJldixcbiAgY2xvbmUsXG4gIHBhcnNlRGRvY0Z1bmN0aW9uTmFtZSxcbiAgbm9ybWFsaXplRGRvY0Z1bmN0aW9uTmFtZSxcbiAgb25jZSxcbiAgdXBzZXJ0LFxuICB0b1Byb21pc2UsXG4gIGRlZmF1bHRCYWNrT2ZmXG59IGZyb20gJ3BvdWNoZGItdXRpbHMnO1xuXG5pbXBvcnQge1xuICBtZXJnZSxcbiAgd2lubmluZ1JldlxufSBmcm9tICdwb3VjaGRiLW1lcmdlJztcblxuaW1wb3J0IHtcbiAgYmluYXJ5U3RyaW5nVG9CbG9iT3JCdWZmZXIsXG59IGZyb20gJ3BvdWNoZGItYmluYXJ5LXV0aWxzJztcblxuaW1wb3J0IHtcbiAgdW5pcSxcbiAgc2VxdWVudGlhbGl6ZSxcbiAgZmluLFxuICBjYWxsYmFja2lmeSxcbiAgcHJvbWlzZWRDYWxsYmFja1xufSBmcm9tICdwb3VjaGRiLW1hcHJlZHVjZS11dGlscyc7XG5cblxuaW1wb3J0IHtcbiAgY3JlYXRlRXJyb3IsXG4gIGdlbmVyYXRlRXJyb3JGcm9tUmVzcG9uc2Vcbn0gZnJvbSAncG91Y2hkYi1lcnJvcnMnO1xuXG5pbXBvcnQgZ2VuZXJhdGVSZXBsaWNhdGlvbklkIGZyb20gJ3BvdWNoZGItZ2VuZXJhdGUtcmVwbGljYXRpb24taWQnO1xuaW1wb3J0IGNoZWNrcG9pbnRlciBmcm9tICdwb3VjaGRiLWNoZWNrcG9pbnRlcic7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcGFyc2VVcmk6IHBhcnNlVXJpLFxuICB1dWlkOiB1dWlkLFxuICByZXY6IHJldixcbiAgUHJvbWlzZTogUHJvbWlzZSxcbiAgYXRvYjogYXRvYixcbiAgYnRvYTogYnRvYSxcbiAgYmluYXJ5U3RyaW5nVG9CbG9iT3JCdWZmZXI6IGJpbmFyeVN0cmluZ1RvQmxvYk9yQnVmZmVyLFxuICBjbG9uZTogY2xvbmUsXG4gIGNyZWF0ZUVycm9yOiBjcmVhdGVFcnJvcixcbiAgZ2VuZXJhdGVFcnJvckZyb21SZXNwb25zZTogZ2VuZXJhdGVFcnJvckZyb21SZXNwb25zZSxcbiAgZ2VuZXJhdGVSZXBsaWNhdGlvbklkOiBnZW5lcmF0ZVJlcGxpY2F0aW9uSWQsXG4gIHBhcnNlRGRvY0Z1bmN0aW9uTmFtZTogcGFyc2VEZG9jRnVuY3Rpb25OYW1lLFxuICBub3JtYWxpemVEZG9jRnVuY3Rpb25OYW1lOiBub3JtYWxpemVEZG9jRnVuY3Rpb25OYW1lLFxuICBvbmNlOiBvbmNlLFxuICBtZXJnZTogbWVyZ2UsXG4gIHdpbm5pbmdSZXY6IHdpbm5pbmdSZXYsXG4gIHVwc2VydDogdXBzZXJ0LFxuICB0b1Byb21pc2U6IHRvUHJvbWlzZSxcbiAgY2hlY2twb2ludGVyOiBjaGVja3BvaW50ZXIsXG4gIGRlZmF1bHRCYWNrT2ZmOiBkZWZhdWx0QmFja09mZixcbiAgYXNzaWduOiBPYmplY3QuYXNzaWduLFxuICBtYXBSZWR1Y2VVdGlsczoge1xuICAgIHVuaXE6IHVuaXEsXG4gICAgc2VxdWVudGlhbGl6ZTogc2VxdWVudGlhbGl6ZSxcbiAgICBmaW46IGZpbixcbiAgICBjYWxsYmFja2lmeTogY2FsbGJhY2tpZnksXG4gICAgcHJvbWlzZWRDYWxsYmFjazogcHJvbWlzZWRDYWxsYmFja1xuICB9XG59O1xuIiwiaW1wb3J0IHtcbiAgIFVOQVVUSE9SSVpFRCxcbiAgIE1JU1NJTkdfQlVMS19ET0NTLFxuICAgTUlTU0lOR19ET0MsXG4gICBSRVZfQ09ORkxJQ1QsXG4gICBJTlZBTElEX0lELFxuICAgTUlTU0lOR19JRCxcbiAgIFJFU0VSVkVEX0lELFxuICAgTk9UX09QRU4sXG4gICBVTktOT1dOX0VSUk9SLFxuICAgQkFEX0FSRyxcbiAgIElOVkFMSURfUkVRVUVTVCxcbiAgIFFVRVJZX1BBUlNFX0VSUk9SLFxuICAgRE9DX1ZBTElEQVRJT04sXG4gICBCQURfUkVRVUVTVCxcbiAgIE5PVF9BTl9PQkpFQ1QsXG4gICBEQl9NSVNTSU5HLFxuICAgV1NRX0VSUk9SLFxuICAgTERCX0VSUk9SLFxuICAgRk9SQklEREVOLFxuICAgSU5WQUxJRF9SRVYsXG4gICBGSUxFX0VYSVNUUyxcbiAgIE1JU1NJTkdfU1RVQixcbiAgIElEQl9FUlJPUixcbiAgIElOVkFMSURfVVJMXG59IGZyb20gJ3BvdWNoZGItZXJyb3JzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBVTkFVVEhPUklaRUQ6IFVOQVVUSE9SSVpFRCxcbiAgTUlTU0lOR19CVUxLX0RPQ1M6IE1JU1NJTkdfQlVMS19ET0NTLFxuICBNSVNTSU5HX0RPQzogTUlTU0lOR19ET0MsXG4gIFJFVl9DT05GTElDVDogUkVWX0NPTkZMSUNULFxuICBJTlZBTElEX0lEOiBJTlZBTElEX0lELFxuICBNSVNTSU5HX0lEOiBNSVNTSU5HX0lELFxuICBSRVNFUlZFRF9JRDogUkVTRVJWRURfSUQsXG4gIE5PVF9PUEVOOiBOT1RfT1BFTixcbiAgVU5LTk9XTl9FUlJPUjogVU5LTk9XTl9FUlJPUixcbiAgQkFEX0FSRzogQkFEX0FSRyxcbiAgSU5WQUxJRF9SRVFVRVNUOiBJTlZBTElEX1JFUVVFU1QsXG4gIFFVRVJZX1BBUlNFX0VSUk9SOiBRVUVSWV9QQVJTRV9FUlJPUixcbiAgRE9DX1ZBTElEQVRJT046IERPQ19WQUxJREFUSU9OLFxuICBCQURfUkVRVUVTVDogQkFEX1JFUVVFU1QsXG4gIE5PVF9BTl9PQkpFQ1Q6IE5PVF9BTl9PQkpFQ1QsXG4gIERCX01JU1NJTkc6IERCX01JU1NJTkcsXG4gIFdTUV9FUlJPUjogV1NRX0VSUk9SLFxuICBMREJfRVJST1I6IExEQl9FUlJPUixcbiAgRk9SQklEREVOOiBGT1JCSURERU4sXG4gIElOVkFMSURfUkVWOiBJTlZBTElEX1JFVixcbiAgRklMRV9FWElTVFM6IEZJTEVfRVhJU1RTLFxuICBNSVNTSU5HX1NUVUI6IE1JU1NJTkdfU1RVQixcbiAgSURCX0VSUk9SOiBJREJfRVJST1IsXG4gIElOVkFMSURfVVJMOiBJTlZBTElEX1VSTFxufTsiLCJpbXBvcnQgUG91Y2hEQiBmcm9tICcuL3BvdWNoZGInO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IGVycm9ycyBmcm9tICcuL2Vycm9ycyc7XG5pbXBvcnQgKiBhcyBjb2xsYXRlIGZyb20gJ3BvdWNoZGItY29sbGF0ZSc7XG4vLyBleHBsaWNpdGx5IGluY2x1ZGUgcG91Y2hkYi1maW5kIHNvIGNvdmVyYWdlIGNhcHR1cmVzIGl0IGNvcnJlY3RseVxuaW1wb3J0IGZpbmQgZnJvbSAncG91Y2hkYi1maW5kJztcblxuUG91Y2hEQi51dGlscyA9IHV0aWxzO1xuUG91Y2hEQi5FcnJvcnMgPSBlcnJvcnM7XG5Qb3VjaERCLmNvbGxhdGUgPSBjb2xsYXRlO1xuUG91Y2hEQi5wbHVnaW4oZmluZCk7XG5cbmV4cG9ydCBkZWZhdWx0IFBvdWNoREI7XG4iXSwibmFtZXMiOlsiYmluYXJ5U3RyaW5nVG9CbG9iT3JCdWZmZXIiLCJwYXJzZURkb2NGdW5jdGlvbk5hbWUiLCJub3JtYWxpemVEZG9jRnVuY3Rpb25OYW1lIiwiY2hlY2twb2ludGVyIiwiZmluZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdUNBO0FBQ0EsWUFBZTtBQUNmLEVBQUUsUUFBUSxFQUFFLFFBQVE7QUFDcEIsRUFBRSxJQUFJLEVBQUUsSUFBSTtBQUNaLEVBQUUsR0FBRyxFQUFFLEdBQUc7QUFDVixFQUFFLE9BQU8sRUFBRSxPQUFPO0FBQ2xCLEVBQUUsSUFBSSxFQUFFLElBQUk7QUFDWixFQUFFLElBQUksRUFBRSxJQUFJO0FBQ1osRUFBRSwwQkFBMEIsRUFBRUEsa0JBQTBCO0FBQ3hELEVBQUUsS0FBSyxFQUFFLEtBQUs7QUFDZCxFQUFFLFdBQVcsRUFBRSxXQUFXO0FBQzFCLEVBQUUseUJBQXlCLEVBQUUseUJBQXlCO0FBQ3RELEVBQUUscUJBQXFCLEVBQUUscUJBQXFCO0FBQzlDLEVBQUUscUJBQXFCLEVBQUVDLDBCQUFxQjtBQUM5QyxFQUFFLHlCQUF5QixFQUFFQyw4QkFBeUI7QUFDdEQsRUFBRSxJQUFJLEVBQUUsSUFBSTtBQUNaLEVBQUUsS0FBSyxFQUFFLEtBQUs7QUFDZCxFQUFFLFVBQVUsRUFBRSxVQUFVO0FBQ3hCLEVBQUUsTUFBTSxFQUFFLE1BQU07QUFDaEIsRUFBRSxTQUFTLEVBQUUsU0FBUztBQUN0QixFQUFFLFlBQVksRUFBRUMsWUFBWTtBQUM1QixFQUFFLGNBQWMsRUFBRSxjQUFjO0FBQ2hDLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxNQUFNO0FBQ3ZCLEVBQUUsY0FBYyxFQUFFO0FBQ2xCLElBQUksSUFBSSxFQUFFLElBQUk7QUFDZCxJQUFJLGFBQWEsRUFBRSxhQUFhO0FBQ2hDLElBQUksR0FBRyxFQUFFLEdBQUc7QUFDWixJQUFJLFdBQVcsRUFBRSxXQUFXO0FBQzVCLElBQUksZ0JBQWdCLEVBQUUsZ0JBQWdCO0FBQ3RDLEdBQUc7QUFDSCxDQUFDOztBQ2hERCxhQUFlO0FBQ2YsRUFBRSxZQUFZLEVBQUUsWUFBWTtBQUM1QixFQUFFLGlCQUFpQixFQUFFLGlCQUFpQjtBQUN0QyxFQUFFLFdBQVcsRUFBRSxXQUFXO0FBQzFCLEVBQUUsWUFBWSxFQUFFLFlBQVk7QUFDNUIsRUFBRSxVQUFVLEVBQUUsVUFBVTtBQUN4QixFQUFFLFVBQVUsRUFBRSxVQUFVO0FBQ3hCLEVBQUUsV0FBVyxFQUFFLFdBQVc7QUFDMUIsRUFBRSxRQUFRLEVBQUUsUUFBUTtBQUNwQixFQUFFLGFBQWEsRUFBRSxhQUFhO0FBQzlCLEVBQUUsT0FBTyxFQUFFLE9BQU87QUFDbEIsRUFBRSxlQUFlLEVBQUUsZUFBZTtBQUNsQyxFQUFFLGlCQUFpQixFQUFFLGlCQUFpQjtBQUN0QyxFQUFFLGNBQWMsRUFBRSxjQUFjO0FBQ2hDLEVBQUUsV0FBVyxFQUFFLFdBQVc7QUFDMUIsRUFBRSxhQUFhLEVBQUUsYUFBYTtBQUM5QixFQUFFLFVBQVUsRUFBRSxVQUFVO0FBQ3hCLEVBQUUsU0FBUyxFQUFFLFNBQVM7QUFDdEIsRUFBRSxTQUFTLEVBQUUsU0FBUztBQUN0QixFQUFFLFNBQVMsRUFBRSxTQUFTO0FBQ3RCLEVBQUUsV0FBVyxFQUFFLFdBQVc7QUFDMUIsRUFBRSxXQUFXLEVBQUUsV0FBVztBQUMxQixFQUFFLFlBQVksRUFBRSxZQUFZO0FBQzVCLEVBQUUsU0FBUyxFQUFFLFNBQVM7QUFDdEIsRUFBRSxXQUFXLEVBQUUsV0FBVztBQUMxQixDQUFDOztBQzdDRCxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUN0QixPQUFPLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztBQUN4QixPQUFPLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztBQUMxQixPQUFPLENBQUMsTUFBTSxDQUFDQyxNQUFJLENBQUM7Ozs7In0=
